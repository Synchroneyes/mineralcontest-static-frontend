import{b as i}from"./VContainer--nXfKEBd.js";const n="github_releases_cache",c=1e3*60*60;async function o(){const a=localStorage.getItem(n),e=localStorage.getItem(`${n}_time`);if(a&&e&&Date.now()-e<c)return JSON.parse(a);try{const s=(await i.get("https://api.github.com/repos/Synchroneyes/MineralContest-static-backend/releases?per_page=1000")).data;return localStorage.setItem(n,JSON.stringify(s)),localStorage.setItem(`${n}_time`,Date.now().toString()),s}catch(t){if(console.error("Erreur lors de la récupération des releases GitHub:",t),a)return JSON.parse(a);throw t}}async function l(a){return(await o()).find(t=>t.tag_name===a)}async function d(a){let e=await l(a);if(e&&e.assets){let t=e.assets.find(s=>s.name.endsWith(".jar"));return t?t.download_count:0}return 0}async function f(a){let e=await l(a);if(e&&e.assets){let t=e.assets.find(s=>s.name.endsWith(".zip"));return t?t.download_count:0}return 0}async function g(){let a=await o(),e=0;for(let t of a)if(t.assets){let s=t.assets.find(r=>r.name.endsWith(".jar"));s&&(e+=s.download_count)}return e}async function w(){let a=await o(),e=0;for(let t of a)if(t.assets){let s=t.assets.find(r=>r.name.endsWith(".zip"));s&&(e+=s.download_count)}return e}async function m(){return(await o()).find(e=>e.tag_name==="stats-gamestarted").assets[0].download_count}export{w as a,m as b,d as c,f as d,g};
